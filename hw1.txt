Небольшая часть достаточно старого проекта

Общее
1) Сделать автозагрузку классов в соответствии PSR-4, PSR-12
2) Указать у классов namespace
3) Наследование от класса Base сделано не правильно (). Если мы хотим использовать в других классах повторяющийся методы, можно оформить класс Base как Трейт
4) Недостаточно документированы, часто отсутствует PHPDoc
5) Методы классов необходимо указывать в camelCase() - PSR-1
6) У многих методов не указаны области видимости - везде указать

class_cashe.php

1) l.7 - Side Effects. В классе не должно быть ничего кроме описания класса
2) l.30, 32 - Конкретные пути оформить как констаниты и вынести в отдельный файл настроек
3) l.46, 47, 63 и т.д - Нарушение SOLID (SRP) - подключение глобальных переменных (классов?).
    Если нам необходимо использовать в методах экземпляры других классов можно:
    а) Передать через праметры
    б) сделать другие классы Singlеton и так использовать готовые экземпляры например $user = User:getInstance()
    в) использовать Facade
4) l.13 - 25 - свойства сделать приватными, установку и получение значений осуществлять через гетеры и сетеры


class_base.php
SOLID - Разделить класс на мелкие (SoC), что бы каждый осуществлял свою функцию:
Примеры: отправка Header, Логирование и сообщения клиенту, Поистк инъекций кода, Работа со строками.
1) l.25 - 80 Выделить методы работающие с логированием в отдельный класс основаный на PSR-3: Logger Interface
2) l.45, 53, 61 и т.д  Код html  перенести в шаблоны и выводить через класс шаблонизатора
3) l.142 - 146 Работу с базой данных осуществлять через класс
4) l.6 - 10 - свойства сделать приватными, установку и получение значений осуществлять через гетеры и сетеры
5) l.247 Описание метода не соответствует тому что метод делает

class_client.php
1) l.8 - свойства сделать приватными, установку и получение значений осуществлять через гетеры и сетеры
2) l.17, 93  Нарушение SOLID (SRP) - подключение глобальных переменных (классов?).
    Если нам необходимо использовать в методах экземпляры других классов можно:
    а) Передать через праметры
    б) сделать другие классы Singlеton и так использовать готовые экземпляры например $user = User:getInstance()
    в) использовать Facade
3) l.142 - 146 Работу с базой данных осуществлять через класс (SoC)
4) l.81 - 89, 100-107 - работу с сессия ми осуществлять через класс (SoC)